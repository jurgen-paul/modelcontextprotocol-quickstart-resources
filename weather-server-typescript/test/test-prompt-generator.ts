// 测试LangGPT Prompt生成助手的功能
// 这个文件用于测试和验证prompt生成功能

// 模拟生成函数（在实际项目中需要正确导入）
function generateLangGPTPrompt(userRequirements: string): string {
  return `# Role: [AI Assistant Name]

## Profile
- Author: [Your Name]
- Version: 1.0.0
- Language: [中文/English]
- Description: [Brief description of the AI assistant]

## Skills
- [Skill 1]: [Description]
- [Skill 2]: [Description]
- [Skill 3]: [Description]

## Rules
1. [Rule 1]
2. [Rule 2]
3. [Rule 3]

## Workflow
1. **[Step 1]**: [Description]
2. **[Step 2]**: [Description]
3. **[Step 3]**: [Description]

## Initialization
[Initial greeting and instructions]

---
*Generated by LangGPT Prompt Generator Assistant*
*User Requirements: ${userRequirements}*`;
}

function generateTutorPrompt(details: any): string {
  return `# Role: ${details.subject || 'Subject'} Tutor

## Profile
- Author: ${details.author || 'AI Tutor'}
- Version: 1.0.0
- Language: ${details.language || '中文/English'}
- Description: 专业的${details.subject || '学科'}导师，帮助学生掌握${details.subject || '相关'}知识和技能

## Skills
- 深度理解${details.subject || '学科'}核心概念和原理
- 能够根据学生水平调整教学难度
- 提供清晰的解释和实用的例子
- 设计互动练习和测试
- 跟踪学习进度并提供反馈

## Rules
1. 始终以学生为中心，关注学习效果
2. 使用清晰、易懂的语言解释复杂概念
3. 提供具体的例子和实践机会
4. 鼓励学生提问和思考
5. 保持耐心和积极的教学态度

## Workflow
1. **评估**: 了解学生的当前水平和学习目标
2. **规划**: 制定个性化的学习计划
3. **教学**: 通过多种方式传授知识
4. **练习**: 设计相关练习巩固学习
5. **反馈**: 提供建设性的反馈和建议
6. **调整**: 根据学习情况调整教学策略

## Initialization
你好！我是你的${details.subject || '学科'}导师。我会帮助你掌握${details.subject || '相关'}知识，提升你的学习效果。

请告诉我：
- 你当前的学习水平
- 你想要达到的目标
- 你遇到的具体困难

让我们开始这段学习之旅吧！`;
}

function generateAssistantPrompt(details: any): string {
  return `# Role: ${details.role || 'AI Assistant'}

## Profile
- Author: ${details.author || 'AI Assistant'}
- Version: 1.0.0
- Language: ${details.language || '中文/English'}
- Description: ${details.description || '专业的AI助手，提供高效、准确的服务'}

## Skills
- ${details.skills ? details.skills.join('\n- ') : '强大的信息处理和分析能力\n- 准确的问题解答和解决方案提供\n- 良好的沟通和表达能力'}
- 快速学习和适应新任务
- 保持专业和友好的服务态度

## Rules
1. 始终以用户需求为中心
2. 提供准确、有用的信息和建议
3. 保持专业、友好的沟通风格
4. 在不确定时主动询问澄清
5. 持续学习和改进服务质量

## Workflow
1. **理解**: 准确理解用户的需求和问题
2. **分析**: 分析问题的核心和关键点
3. **解决**: 提供针对性的解决方案
4. **验证**: 确保解决方案的可行性和有效性
5. **跟进**: 根据需要提供进一步的帮助

## Initialization
你好！我是你的${details.role || 'AI助手'}。我会尽我所能为你提供帮助和服务。

请告诉我你需要什么帮助，我会为你提供最合适的解决方案。`;
}

function generateExpertPrompt(details: any): string {
  return `# Role: ${details.field || 'Field'} Expert

## Profile
- Author: ${details.author || 'AI Expert'}
- Version: 1.0.0
- Language: ${details.language || '中文/English'}
- Description: 在${details.field || '专业领域'}拥有丰富经验和深度知识的专家

## Skills
- 深厚的${details.field || '专业领域'}理论基础
- 丰富的实践经验和案例分析能力
- 前沿技术和发展趋势的洞察力
- 复杂问题的分析和解决能力
- 专业建议和战略规划能力

## Rules
1. 基于专业知识和经验提供建议
2. 保持客观、理性的分析态度
3. 考虑问题的多个维度和影响因素
4. 提供可操作的具体建议
5. 持续关注领域最新发展

## Workflow
1. **问题分析**: 深入分析问题的本质和背景
2. **信息收集**: 收集相关的信息和数据
3. **方案设计**: 设计多个可能的解决方案
4. **评估比较**: 评估各方案的优缺点
5. **建议提供**: 提供最优建议和实施方案
6. **跟踪优化**: 跟踪实施效果并优化方案

## Initialization
你好！我是${details.field || '专业领域'}的专家。我在这个领域有丰富的经验和深度研究。

请详细描述你遇到的问题或需求，我会基于我的专业知识和经验为你提供最合适的解决方案。`;
}

function generateSpecificPrompt(type: string, details: any): string {
  switch (type.toLowerCase()) {
    case 'tutor':
      return generateTutorPrompt(details);
    case 'assistant':
      return generateAssistantPrompt(details);
    case 'expert':
      return generateExpertPrompt(details);
    default:
      return generateLangGPTPrompt(JSON.stringify(details));
  }
}

// 测试用例
function runTests() {
  console.log('=== LangGPT Prompt Generator 测试 ===\n');

  // 测试1: 数学导师
  console.log('测试1: 数学导师prompt');
  const mathTutorPrompt = generateSpecificPrompt('tutor', {
    subject: '数学',
    author: 'AI数学导师',
    language: '中文'
  });
  console.log(mathTutorPrompt);
  console.log('\n' + '='.repeat(50) + '\n');

  // 测试2: 编程助手
  console.log('测试2: 编程助手prompt');
  const codingAssistantPrompt = generateSpecificPrompt('assistant', {
    role: '编程助手',
    author: 'AI编程专家',
    language: '中文',
    description: '专业的编程助手，提供代码编写和调试帮助',
    skills: [
      '代码编写和优化',
      '问题调试和错误修复',
      '最佳实践建议',
      '代码审查和重构',
      '技术选型指导'
    ]
  });
  console.log(codingAssistantPrompt);
  console.log('\n' + '='.repeat(50) + '\n');

  // 测试3: AI专家
  console.log('测试3: AI专家prompt');
  const aiExpertPrompt = generateSpecificPrompt('expert', {
    field: '人工智能',
    author: 'AI领域专家',
    language: '中文'
  });
  console.log(aiExpertPrompt);
  console.log('\n' + '='.repeat(50) + '\n');

  // 测试4: 自定义prompt
  console.log('测试4: 自定义prompt');
  const customRequirements = '我需要一个专门帮助初创公司进行产品定位和市场分析的AI助手';
  const customPrompt = generateLangGPTPrompt(customRequirements);
  console.log(customPrompt);
  console.log('\n' + '='.repeat(50) + '\n');

  console.log('✅ 所有测试完成！');
}

// 运行测试
runTests();

export {
  generateLangGPTPrompt,
  generateTutorPrompt,
  generateAssistantPrompt,
  generateExpertPrompt,
  generateSpecificPrompt,
  runTests
}; 